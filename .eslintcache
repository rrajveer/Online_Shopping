[{"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\index.js":"1","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\reportWebVitals.js":"2","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\App.js":"3","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\index.js":"4","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Navbar\\Navbar.jsx":"5","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Products\\products.jsx":"6","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Navbar\\styles.js":"7","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Products\\styles.js":"8","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Products\\Product\\product.jsx":"9","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\lib\\commerce.js":"10","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\Cart.jsx":"11","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\styles.js":"12","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\CheckOut\\Checkout.jsx":"15","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\CheckOut\\styles.js":"16","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\Confirmation.jsx":"17","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\AddressForm.jsx":"18","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\PaymentForm.jsx":"19","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\CustomTextField.jsx":"20","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\ReviewForm.jsx":"21"},{"size":289,"mtime":1609359183615,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2447,"mtime":1609535649828,"results":"25","hashOfConfig":"23"},{"size":226,"mtime":1609452023570,"results":"26","hashOfConfig":"23"},{"size":1475,"mtime":1609449634724,"results":"27","hashOfConfig":"23"},{"size":1084,"mtime":1609614033080,"results":"28","hashOfConfig":"23"},{"size":1631,"mtime":1609367631097,"results":"29","hashOfConfig":"23"},{"size":298,"mtime":1609538838177,"results":"30","hashOfConfig":"23"},{"size":1577,"mtime":1609538639806,"results":"31","hashOfConfig":"23"},{"size":143,"mtime":1609529156979,"results":"32","hashOfConfig":"23"},{"size":1973,"mtime":1609451927173,"results":"33","hashOfConfig":"23"},{"size":597,"mtime":1609445676761,"results":"34","hashOfConfig":"23"},{"size":1274,"mtime":1610336726447,"results":"35","hashOfConfig":"23"},{"size":349,"mtime":1610330245085,"results":"36","hashOfConfig":"23"},{"size":3815,"mtime":1609557015846,"results":"37","hashOfConfig":"23"},{"size":1208,"mtime":1609452771227,"results":"38","hashOfConfig":"23"},{"size":159,"mtime":1609453359835,"results":"39","hashOfConfig":"40"},{"size":5419,"mtime":1609528303941,"results":"41","hashOfConfig":"23"},{"size":2773,"mtime":1613583647201,"results":"42","hashOfConfig":"23"},{"size":578,"mtime":1609533646097,"results":"43","hashOfConfig":"23"},{"size":1144,"mtime":1609526033177,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"if6cya",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z4u6cg",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\index.js",[],["93","94"],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\reportWebVitals.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\App.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\index.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Navbar\\Navbar.jsx",["95","96","97"],"import React from 'react'\r\nimport { Toolbar, AppBar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core'\r\nimport { ShoppingCart } from '@material-ui/icons'\r\nimport  logo  from '../../img/commerce.png'\r\nimport useStyles from './styles'\r\nimport { Link , useLocation} from 'react-router-dom'\r\n\r\nconst Navbar = ({totalItems}) => {\r\n    const classes = useStyles()\r\n    const location = useLocation()\r\n    return (\r\n        <>\r\n          <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n              <Toolbar>\r\n                  <Typography component={Link} to=\"/\" variant='h6' className={classes.title} color=\"inherit\">\r\n                      <img src={logo} height=\"25px\" className={classes.image}/>\r\n                      Commerce.js\r\n                  </Typography>\r\n                  <div className={classes.grow}/>\r\n                  {location.pathname === '/' && (\r\n                        <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"show cart item\" color=\"inherit\" >\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart/>\r\n                            </Badge>\r\n                            \r\n                        </IconButton>\r\n                    </div>\r\n                  )}\r\n              </Toolbar>\r\n          </AppBar>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Products\\products.jsx",["98"],"import React from 'react'\r\nimport { Grid }  from '@material-ui/core'\r\nimport Product from './Product/product'\r\nimport useStyles from './styles'\r\n// const products=[\r\n//     {id:1,name:\"pro1\",price:'50',description:\"Running shoes\",image:'https://source.unsplash.com/random/200x200'},\r\n//     {id:2,name:\"pro2\",price:'40',description:\"Apple Store\",image:\"https://source.unsplash.com/random/400x400\"}\r\n\r\n// ];\r\nconst Products = ({products,onAddToCart}) => {\r\n    const classes = useStyles()\r\n\r\n    if (!products.length) return <p>Loading...</p>;\r\n   \r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n        <Grid container justify=\"center\" spacing={4}>\r\n            {\r\n              products.map((product) =>(\r\n                  <Grid item key={product.id} item xs={12} sm={6} md={4} lg={3}>\r\n                        <Product product={product} onAddToCart={onAddToCart}/>\r\n                  </Grid>\r\n              ))\r\n            }\r\n        </Grid>\r\n        </main>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default Products\r\n","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Navbar\\styles.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Products\\styles.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Products\\Product\\product.jsx",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\lib\\commerce.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\Cart.jsx",["99"],"import React from 'react'\r\nimport { Button, Grid, Container, Typography} from '@material-ui/core'\r\nimport useStyles from'./styles'\r\nimport { LocalDiningTwoTone } from '@material-ui/icons';\r\nimport CartItem from './CartItem/CartItem'\r\nimport { Link} from 'react-router-dom'\r\n\r\nconst Cart = ({cart,emptyCart, updateCart, remCart}) => {\r\n    const classes = useStyles();\r\n    // const isEmpty= !cart.line_items.length;\r\n    const EmptyCart = () =>(\r\n             <Typography variant='h4'>Your cart is empty now, add some items to fill it\r\n                   <Link to=\"/\" className={classes.link}>Add Some Items...</Link>\r\n             </Typography>\r\n    )\r\n    const FilledCart = () =>(\r\n           <>\r\n             <Grid container spacing={6}>\r\n                 { cart.line_items.map((item) =>(\r\n                     <Grid item key={item.id} xs={12} sm={4}>\r\n                        <CartItem item={item} updateCart={updateCart} remCart={remCart}/>\r\n                     </Grid>\r\n                 ))}\r\n\r\n             </Grid>\r\n             <div className={classes.cardDetails}>\r\n                 <Typography variant='h4'>SubTotal: {cart.subtotal.formatted_with_symbol}</Typography>\r\n                 <div>\r\n                     <Button className={classes.emptyButton} type=\"button\" variant=\"contained\" color=\"secondary\" onClick={emptyCart}>Empty Cart</Button>\r\n                     <Button component={Link} to=\"/checkout\" className={classes.checkoutButton} type=\"button\" variant=\"contained\" color=\"primary\">Check Out</Button>\r\n                 </div>\r\n             </div>\r\n           </>\r\n    )\r\n   if(!cart.line_items) return 'Loading...';\r\n    return (\r\n        <Container>\r\n            <div className={classes.toolbar}/>\r\n            <Typography  className={classes.title} variant='h4' gutterBottom>Your Shopping Cart</Typography>\r\n            { !cart.line_items.length ? <EmptyCart/> : <FilledCart/> }\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\styles.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\CheckOut\\Checkout.jsx",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\CheckOut\\styles.js",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\Confirmation.jsx",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\AddressForm.jsx",["100","101"],"import React, { useState, useEffect} from 'react'\r\nimport { Link } from'react-router-dom'\r\nimport { Select, MenuItem, Button ,Grid,InputLabel, Typography} from '@material-ui/core'\r\nimport { useForm, FormProvider} from 'react-hook-form'\r\nimport FormInput from './CustomTextField'\r\nimport { commerce } from '../../lib/commerce'\r\nconst AddressForm = ({ checkoutToken, next}) => {\r\n    const methods = useForm()\r\n    \r\n  \r\n    const[countries, setCountries] = useState([]);\r\n    const[country, setCountry] = useState('');\r\n    const[subDivisions, setSubDivisions] = useState([]);\r\n    const[subDivision, setSubDivision] = useState('');\r\n    const[options, setOptions] = useState([]);\r\n    const[option, setOption] = useState('');\r\n   \r\n    // To Conevert array of array into simple array\r\n    const countriesArray = Object.entries(countries).map(([code,name]) =>({id:code, label:name}));\r\n    console.log(countriesArray)\r\n\r\n    const subdivionsArray = Object.entries(subDivisions).map(([code,name]) =>({id:code, label:name}));\r\n    console.log(subdivionsArray)\r\n    \r\n    const optionsArray = options.map((so) =>({id:so.id, label:`${so.description}- (${so.price.formatted_with_price})`}))\r\n    const fetchCountries = async(checkoutTokenId) =>{\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n        console.log(countries)\r\n        setCountries(countries);\r\n        setCountry(Object.keys(countries)[0])\r\n    }\r\n    const fetchSubDivisions = async(countryCode) =>{\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n        console.log(subdivisions)\r\n        setSubDivisions(subdivisions)\r\n        setSubDivision(Object.keys(subdivisions)[0])\r\n    }\r\n    const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n    \r\n        setOptions(options);\r\n        setOption(options[0].id);\r\n      };\r\n    useEffect(() =>{\r\n           fetchCountries(checkoutToken.id)\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n       if(country) fetchSubDivisions(country);\r\n    },[country])\r\n    useEffect(() => {\r\n        if (subDivision) fetchShippingOptions(checkoutToken.id, country, subDivision);\r\n      }, [subDivision]);\r\n     \r\n    return (\r\n        <>\r\n          <Typography variant=\"h6\" gutterBottom>Shiiping Address</Typography>\r\n            <FormProvider { ...methods}>\r\n             <form onSubmit={methods.handleSubmit((data) => next({ ...data, country, subDivision, option}))}>\r\n                 <Grid container spacing={3}>\r\n                     <FormInput  name='firstname' label='First Name'/>\r\n                     <FormInput  name='lastname' label='last Name'/>\r\n                     <FormInput  name='address1' label='Address'/>\r\n                     <FormInput  name='email' label='email'/>\r\n                     <FormInput  name='city' label='city'/>\r\n                     <FormInput  name='postalcode' label='Postal code'/>\r\n                  \r\n                     <Grid item xs={12} sm={6}>\r\n                         <InputLabel>Shipping Country</InputLabel>\r\n                         <Select fullWidth value={country} onChange={(e) =>setCountry(e.target.value)}>\r\n                            {countriesArray.map((country) =>(\r\n                                 <MenuItem key={country.id} value={country.id}>\r\n                                      {country.label}\r\n                                </MenuItem> \r\n                            ))}\r\n                          </Select>\r\n                        </Grid>\r\n                          <Grid item xs={12} sm={6}>\r\n                          <InputLabel>Shipping SubDivisions</InputLabel>\r\n                         <Select fullWidth value={subDivision} onChange={(e) => setSubDivision(e.target.value)}>\r\n                         {\r\n                             subdivionsArray.map((subdivision) =>(\r\n                                 <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                     {subdivision.label}\r\n                             </MenuItem>\r\n                             ))\r\n                         }\r\n                            \r\n                         </Select>\r\n                         </Grid>\r\n                         <Grid item xs={12} sm={6}>\r\n                         <InputLabel>Shipping Options</InputLabel>\r\n                         <Select fullWidth value={option} onChange={(e) => setOption(e.target.value)}>\r\n                            {optionsArray.map((option) =>(\r\n                                <MenuItem key={option.id} value={option.id}>\r\n                                  {option.label}\r\n                            </MenuItem>\r\n                            ) )} \r\n                         </Select> \r\n                        \r\n                     </Grid>\r\n                 </Grid>\r\n                 <br/>\r\n                 <div style={{display:'flex', justifyContent:'space-between'}}>\r\n                         <Button type=\"button\" component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                         <Button type=\"submit\"  variant=\"outlined\" color=\"primary\">Next Step</Button>\r\n                 </div>\r\n             </form>\r\n\r\n         </FormProvider>\r\n            \r\n      </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\CustomTextField.jsx",[],["102","103"],"C:\\Users\\rrajveer\\Documents\\React_practice\\webshop-stripe\\src\\Components\\CheckoutForm\\ReviewForm.jsx",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":46,"nodeType":"110","messageId":"111","endLine":2,"endColumn":54},{"ruleId":"108","severity":1,"message":"112","line":2,"column":56,"nodeType":"110","messageId":"111","endLine":2,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":16,"column":23,"nodeType":"115","endLine":16,"endColumn":80},{"ruleId":"116","severity":1,"message":"117","line":21,"column":47,"nodeType":"118","endLine":21,"endColumn":51},{"ruleId":"108","severity":1,"message":"119","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":46,"column":7,"nodeType":"122","endLine":46,"endColumn":9,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":53,"column":10,"nodeType":"122","endLine":53,"endColumn":23,"suggestions":"125"},{"ruleId":"104","replacedBy":"126"},{"ruleId":"106","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'LocalDiningTwoTone' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'country'. Either include them or remove the dependency array.",["131"],["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"136","text":"137"},"Update the dependencies array to be: [checkoutToken.id, country, subDivision]",{"range":"138","text":"139"},[2116,2118],"[checkoutToken.id]",[2331,2344],"[checkoutToken.id, country, subDivision]"]